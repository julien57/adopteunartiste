{% extends 'base_profil.html.twig' %}

{% block start_body %}
    <div id="popapp"></div>
{% endblock %}

{% block body %}
    <!-- GRID -->
    <div class="profile-header v2">
        <!-- PROFILE HEADER COVER -->
        <figure class="profile-header-cover liquid">
            <img src="{% if group.avatar %}{{ asset( constant('App\\Services\\File\\UploadFile::COVERUPLOAD_DIR')) ~ group.cover }}{% else %}{{ asset('/img/avatar/01.jpg') }}{% endif %}" alt="cover-29">
        </figure>
        <!-- /PROFILE HEADER COVER -->

        <!-- PROFILE HEADER INFO -->
        <div class="profile-header-info">
            <!-- USER SHORT DESCRIPTION -->
            <div class="user-short-description big">
                <!-- USER SHORT DESCRIPTION AVATAR -->
                <a class="user-short-description-avatar user-avatar big no-stats" href="">
                    <!-- USER AVATAR BORDER -->
                    <div class="user-avatar-border">
                        <!-- HEXAGON -->
                        <div class="hexagon-148-164"></div>
                        <!-- /HEXAGON -->
                    </div>
                    <!-- /USER AVATAR BORDER -->

                    <!-- USER AVATAR CONTENT -->
                    <div class="user-avatar-content">
                        <!-- HEXAGON -->
                        <div class="hexagon-image-124-136" data-src="{% if group.avatar %}{{ asset( constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR')) ~ group.avatar }}{% else %}{{ asset('/img/avatar/01.jpg') }}{% endif %}"></div>
                        <!-- /HEXAGON -->
                    </div>
                    <!-- /USER AVATAR CONTENT -->
                </a>
                <!-- /USER SHORT DESCRIPTION AVATAR -->

                <!-- USER SHORT DESCRIPTION AVATAR -->
                <a class="user-short-description-avatar user-short-description-avatar-mobile user-avatar medium no-stats" href="group-timeline.html">
                    <!-- USER AVATAR BORDER -->
                    <div class="user-avatar-border">
                        <!-- HEXAGON -->
                        <div class="hexagon-120-130"></div>
                        <!-- /HEXAGON -->
                    </div>
                    <!-- /USER AVATAR BORDER -->

                    <!-- USER AVATAR CONTENT -->
                    <div class="user-avatar-content">
                        <!-- HEXAGON -->
                        <div class="hexagon-image-100-110" data-src="{% if group.avatar %}{{ asset( constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR')) ~ group.avatar }}{% else %}{{ asset('/img/avatar/01.jpg') }}{% endif %}"></div>
                        <!-- /HEXAGON -->
                    </div>
                    <!-- /USER AVATAR CONTENT -->
                </a>
                <!-- /USER SHORT DESCRIPTION AVATAR -->

                <!-- USER SHORT DESCRIPTION TITLE -->
                <p class="user-short-description-title">{{ group.name }}</p>
                <!-- /USER SHORT DESCRIPTION TITLE -->

                <!-- USER SHORT DESCRIPTION TEXT -->
                <!-- /USER SHORT DESCRIPTION TEXT -->
            </div>
            <!-- /USER SHORT DESCRIPTION -->

            <!-- USER STATS -->
            <div class="user-stats">
                <!-- USER STAT -->
                <div class="user-stat big">
                    <!-- USER STAT ICON -->
                    <div class="user-stat-icon">
                        <!-- ICON PUBLIC -->
                        <svg class="icon-public">
                            <use xlink:href="#svg-public"></use>
                        </svg>
                        <!-- /ICON PUBLIC -->
                    </div>
                    <!-- /USER STAT ICON -->

                    <!-- USER STAT TEXT -->
                    <p class="user-stat-text">public</p>
                    <!-- /USER STAT TEXT -->
                </div>
                <!-- /USER STAT -->

                <!-- USER STAT -->
                <div class="user-stat big">
                    <!-- USER STAT TITLE -->
                    <p class="user-stat-title">{{ group.members|length }}</p>
                    <!-- /USER STAT TITLE -->

                    <!-- USER STAT TEXT -->
                    <p class="user-stat-text">membres</p>
                    <!-- /USER STAT TEXT -->
                </div>
                <!-- /USER STAT -->

                <!-- USER STAT -->
                <div class="user-stat big">
                    <!-- USER STAT TITLE -->
                    <p class="user-stat-title">{{ group.posts|length }}</p>
                    <!-- /USER STAT TITLE -->

                    <!-- USER STAT TEXT -->
                    <p class="user-stat-text">posts</p>
                    <!-- /USER STAT TEXT -->
                </div>
                <!-- /USER STAT -->

            </div>
            <!-- /USER STATS -->

            <!-- TAG STICKER -->
            <div class="tag-sticker">
                <!-- TAG STICKER ICON -->
                <svg class="tag-sticker-icon icon-public">
                    <use xlink:href="#svg-public"></use>
                </svg>
                <!-- /TAG STICKER ICON -->
            </div>
            <!-- /TAG STICKER -->

            <!-- PROFILE HEADER INFO ACTIONS -->
            <div class="profile-header-info-actions">
                <!-- PROFILE HEADER INFO ACTION -->
                {% if group.isContainUser(app.user) %}
                    <a href="{{ path('front_group_leave_join_group', {'slug': group.slug}) }}" class="profile-header-info-action button secondary">
                        <!-- ICON JOIN GROUP -->
                        <svg class="icon-leave-group">
                            <use xlink:href="#svg-leave-group"></use>
                        </svg>
                        <!-- /ICON JOIN GROUP -->
                    </a>
                {% else %}
                    <a href="{{ path('front_group_leave_join_group', {'slug': group.slug}) }}" class="profile-header-info-action button secondary">
                        <!-- ICON JOIN GROUP -->
                        <svg class="icon-join-group">
                            <use xlink:href="#svg-join-group"></use>
                        </svg>
                        <!-- /ICON JOIN GROUP -->
                    </a>
                {% endif %}

                <!-- PROFILE HEADER INFO ACTION -->
                {% if group.author == app.user %}
                <a class="profile-header-info-action button" href="{{ path('front_space_groups') }}">
                    <!-- ICON MORE DOTS -->
                    <svg class="icon-more-dots">
                        <use xlink:href="#svg-more-dots"></use>
                    </svg>
                    <!-- /ICON MORE DOTS -->
                </a>
                {% endif %}
                <!-- /PROFILE HEADER INFO ACTION -->
            </div>
            <!-- /PROFILE HEADER INFO ACTIONS -->
        </div>
        <!-- /PROFILE HEADER INFO -->
    </div>

    <div class="grid grid-3-6-3 mobile-prefer-content">
        <!-- GRID COLUMN -->
        <div class="grid-column">
            <!-- WIDGET BOX -->
            <div class="widget-box">
                {% if group.author == app.user %}
                <div class="widget-box-settings">
                    <!-- POST SETTINGS WRAP -->
                    <div class="post-settings-wrap">
                        <!-- POST SETTINGS -->
                        <div class="post-settings widget-box-post-settings-dropdown-trigger">
                            <!-- POST SETTINGS ICON -->
                            <svg class="post-settings-icon icon-more-dots">
                                <use xlink:href="#svg-more-dots"></use>
                            </svg>
                            <!-- /POST SETTINGS ICON -->
                        </div>
                        <!-- /POST SETTINGS -->

                        <!-- SIMPLE DROPDOWN -->
                        <div class="simple-dropdown widget-box-post-settings-dropdown">
                            <!-- SIMPLE DROPDOWN LINK -->
                            <a href="{{ path('front_space_manage_group_social', {'slug': group.slug}) }}" class="simple-dropdown-link">Gérer les réseaux</a>
                            <!-- /SIMPLE DROPDOWN LINK -->
                        </div>
                        <!-- /SIMPLE DROPDOWN -->
                    </div>
                    <!-- /POST SETTINGS WRAP -->
                </div>
                {% endif %}

                <!-- WIDGET BOX TITLE -->
                <p class="widget-box-title">Réseaux Sociaux</p>
                <!-- /WIDGET BOX TITLE -->

                <!-- WIDGET BOX CONTENT -->
                <div class="widget-box-content">
                    <!-- SOCIAL LINKS -->
                    <div class="social-links multiline align-left">

                        {% if group.facebook %}
                        <a class="social-link small facebook" href="{{ group.facebook }}">
                            <!-- SOCIAL LINK ICON -->
                            <svg class="social-link-icon icon-facebook">
                                <use xlink:href="#svg-facebook"></use>
                            </svg>
                            <!-- /SOCIAL LINK ICON -->
                        </a>
                        {% endif %}

                        {% if group.twitter %}
                        <a class="social-link small twitter" href="{{ group.twitch }}">
                            <!-- SOCIAL LINK ICON -->
                            <svg class="social-link-icon icon-twitter">
                                <use xlink:href="#svg-twitter"></use>
                            </svg>
                            <!-- /SOCIAL LINK ICON -->
                        </a>
                        {% endif %}

                        {% if group.instagram %}
                        <a class="social-link small instagram" href="{{ group.instagram }}">
                            <!-- SOCIAL LINK ICON -->
                            <svg class="social-link-icon icon-instagram">
                                <use xlink:href="#svg-instagram"></use>
                            </svg>
                            <!-- /SOCIAL LINK ICON -->
                        </a>
                        {% endif %}

                        {% if group.twitch %}
                        <a class="social-link small twitch" href="{{ group.twitch }}">
                            <!-- SOCIAL LINK ICON -->
                            <svg class="social-link-icon icon-twitch">
                                <use xlink:href="#svg-twitch"></use>
                            </svg>
                            <!-- /SOCIAL LINK ICON -->
                        </a>
                        {% endif %}

                        {% if group.youtube %}
                        <a class="social-link small youtube" href="{{ group.youtube }}">
                            <!-- SOCIAL LINK ICON -->
                            <svg class="social-link-icon icon-youtube">
                                <use xlink:href="#svg-youtube"></use>
                            </svg>
                            <!-- /SOCIAL LINK ICON -->
                        </a>
                        {% endif %}

                    </div>
                    <!-- /SOCIAL LINKS -->
                </div>
                <!-- /WIDGET BOX CONTENT -->
            </div>
            <!-- /WIDGET BOX -->
        </div>
        <!-- /GRID COLUMN -->

        <!-- GRID COLUMN -->
        <div class="grid-column" id="fil_actu_posts">
            <div class="quick-post">
                {% if group.author == app.user %}
                <!-- QUICK POST HEADER -->
                <div class="quick-post-header">
                    <!-- OPTION ITEMS -->
                    <div class="option-items">
                        <!-- OPTION ITEM -->
                        <div class="option-item active">
                            <!-- OPTION ITEM ICON -->
                            <svg class="option-item-icon icon-status">
                                <use xlink:href="#svg-status"></use>
                            </svg>
                            <!-- /OPTION ITEM ICON -->

                            <!-- OPTION ITEM TITLE -->
                            <p class="option-item-title">Poster sur la page</p>
                            <!-- /OPTION ITEM TITLE -->
                        </div>
                        <!-- /OPTION ITEM -->
                    </div>
                    <!-- /OPTION ITEMS -->
                </div>
                <!-- /QUICK POST HEADER -->

                <!-- QUICK POST BODY -->
                <form class="form" id="form-post" method="post" action="{{ path('front_group_add_post') }}">
                    <div class="quick-post-body">
                        <!-- FORM -->
                        <!-- FORM ROW -->
                        <div class="form-row">
                            <!-- FORM ITEM -->
                            <div class="form-item">
                                <!-- FORM TEXTAREA -->
                                <div class="form-textarea">
                                    <textarea id="quick-post-text" name="quick-post-text" placeholder="Hello {{ app.user.firstName }} ! Un petit mot à partager ?"></textarea>
                                </div>
                                <!-- /FORM TEXTAREA -->
                            </div>
                            <!-- /FORM ITEM -->
                        </div>
                        <!-- /FORM ROW -->
                        <!-- /FORM -->
                    </div>
                    <div id="block_preview"><img id="photo_preview" src="" style="height:300px;"></div>
                    <!-- /QUICK POST BODY -->

                    <!-- QUICK POST FOOTER -->
                    <div class="quick-post-footer">
                        <!-- QUICK POST FOOTER ACTIONS -->
                        <div class="quick-post-footer-actions">
                            <!-- QUICK POST FOOTER ACTION -->
                            <div class="quick-post-footer-action text-tooltip-tft-medium" data-title="Insert Photo" style="position: relative;">
                                <!-- QUICK POST FOOTER ACTION ICON -->
                                <label for="file-input">
                                    <svg class="quick-post-footer-action-icon icon-camera" style="cursor:pointer">
                                        <use xlink:href="#svg-camera"></use>
                                    </svg>
                                </label>
                                <!-- /QUICK POST FOOTER ACTION ICON -->
                                <div class="xm-tooltip" style="white-space: nowrap; position: absolute; z-index: 99999; top: -32px; left: 50%; margin-left: -42.5px; opacity: 0; visibility: hidden; transform: translate(0px, 10px); transition: all 0.3s ease-in-out 0s;"><p class="xm-tooltip-text">Insert Photo</p></div></div>
                            <!-- /QUICK POST FOOTER ACTION -->

                            <!-- QUICK POST FOOTER ACTION -->
                            <div class="quick-post-footer-action text-tooltip-tft-medium" data-title="Insert GIF" style="position: relative;">
                                <!-- QUICK POST FOOTER ACTION ICON -->
                                <svg class="quick-post-footer-action-icon icon-gif">
                                    <use xlink:href="#svg-gif"></use>
                                </svg>
                                <!-- /QUICK POST FOOTER ACTION ICON -->
                                <div class="xm-tooltip" style="white-space: nowrap; position: absolute; z-index: 99999; top: -32px; left: 50%; margin-left: -35.5px; opacity: 0; visibility: hidden; transform: translate(0px, 10px); transition: all 0.3s ease-in-out 0s;"><p class="xm-tooltip-text">Insert GIF</p></div></div>
                            <!-- /QUICK POST FOOTER ACTION -->
                            <input id="file-input" name="file_post" type="file" style="display:none"/>
                            <!-- QUICK POST FOOTER ACTION -->
                            <div class="quick-post-footer-action text-tooltip-tft-medium" data-title="Insert Tag" style="position: relative;">
                                <!-- QUICK POST FOOTER ACTION ICON -->
                                <svg class="quick-post-footer-action-icon icon-tags">
                                    <use xlink:href="#svg-tags"></use>
                                </svg>
                                <!-- /QUICK POST FOOTER ACTION ICON -->
                                <div class="xm-tooltip" style="white-space: nowrap; position: absolute; z-index: 99999; top: -32px; left: 50%; margin-left: -37px; opacity: 0; visibility: hidden; transform: translate(0px, 10px); transition: all 0.3s ease-in-out 0s;"><p class="xm-tooltip-text">Insert Tag</p></div></div>
                            <!-- /QUICK POST FOOTER ACTION -->
                            <input type="hidden" value="{{ group.id }}" name="group-id">
                        </div>
                        <!-- /QUICK POST FOOTER ACTIONS -->

                        <!-- QUICK POST FOOTER ACTIONS -->
                        <div class="quick-post-footer-actions">
                            <!-- BUTTON -->
                            <p class="button small void" id="discard_post">Effacer</p>
                            <!-- /BUTTON -->

                            <!-- BUTTON -->
                            <input type="submit" class="button small secondary" value="Poster">
                            <!-- /BUTTON -->
                        </div>
                        <!-- /QUICK POST FOOTER ACTIONS -->
                    </div>
                </form>
                <!-- /QUICK POST FOOTER -->
            </div>
            {% endif %}

            <div id="next_post"></div>
            {% for post in posts %}
                    <div class="widget-box no-padding">
                        <!-- WIDGET BOX SETTINGS -->
                        {% if post.user == app.user %}
                            <div class="widget-box-settings">
                                <!-- POST SETTINGS WRAP -->
                                <div class="post-settings-wrap">
                                    <!-- POST SETTINGS -->
                                    <div class="post-settings widget-box-post-settings-dropdown-trigger">
                                        <!-- POST SETTINGS ICON -->
                                        <svg class="post-settings-icon icon-more-dots">
                                            <use xlink:href="#svg-more-dots"></use>
                                        </svg>
                                        <!-- /POST SETTINGS ICON -->
                                    </div>
                                    <!-- /POST SETTINGS -->

                                    <!-- SIMPLE DROPDOWN -->
                                    <div class="simple-dropdown widget-box-post-settings-dropdown">

                                        <!-- SIMPLE DROPDOWN LINK -->
                                        <a class="simple-dropdown-link" href="{{ path('front_profil_remove_post', {id: post.id}) }}">Supprimer</a>
                                        <!-- /SIMPLE DROPDOWN LINK -->
                                    </div>
                                    <!-- /SIMPLE DROPDOWN -->
                                </div>
                                <!-- /POST SETTINGS WRAP -->
                            </div>
                        {% endif %}
                        <!-- /WIDGET BOX SETTINGS -->

                        <!-- WIDGET BOX STATUS -->
                        <div class="widget-box-status">

                            <!-- WIDGET BOX STATUS CONTENT -->
                            <div class="widget-box-status-content">
                                <!-- USER STATUS -->
                                <div class="user-status">
                                    <!-- USER STATUS AVATAR -->
                                    <a class="user-status-avatar" href="{{ path('front_group_single', {'slug': group.slug}) }}">
                                        <!-- USER AVATAR -->
                                        <div class="user-avatar small no-outline">
                                            <!-- USER AVATAR CONTENT -->
                                            <div class="user-avatar-content">
                                                <!-- HEXAGON -->
                                                <div class="hexagon-image-30-32" data-src="{% if group.avatar %}{{ asset( constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR')) ~ group.avatar }}{% else %}{{ asset('img/avatar/01.jpg') }}{% endif %}"></div>
                                                <!-- /HEXAGON -->
                                            </div>
                                            <!-- /USER AVATAR CONTENT -->

                                            <!-- USER AVATAR PROGRESS -->
                                            <div class="user-avatar-progress">
                                                <!-- HEXAGON -->
                                                <div class="hexagon-progress-40-44"></div>
                                                <!-- /HEXAGON -->
                                            </div>
                                            <!-- /USER AVATAR PROGRESS -->

                                            <!-- USER AVATAR PROGRESS BORDER -->
                                            <div class="user-avatar-progress-border">
                                                <!-- HEXAGON -->
                                                <div class="hexagon-border-40-44"></div>
                                                <!-- /HEXAGON -->
                                            </div>
                                            <!-- /USER AVATAR PROGRESS BORDER -->

                                            <!-- USER AVATAR BADGE -->
                                            <div class="user-avatar-badge">
                                                <!-- USER AVATAR BADGE BORDER -->
                                                <div class="user-avatar-badge-border">
                                                    <!-- HEXAGON -->
                                                    <div class="hexagon-22-24"></div>
                                                    <!-- /HEXAGON -->
                                                </div>
                                                <!-- /USER AVATAR BADGE BORDER -->

                                                <!-- USER AVATAR BADGE CONTENT -->
                                                <div class="user-avatar-badge-content">
                                                    <!-- HEXAGON -->
                                                    <div class="hexagon-dark-16-18"></div>
                                                    <!-- /HEXAGON -->
                                                </div>
                                                <!-- /USER AVATAR BADGE CONTENT -->

                                                <!-- USER AVATAR BADGE TEXT -->
                                                <p class="user-avatar-badge-text">24</p>
                                                <!-- /USER AVATAR BADGE TEXT -->
                                            </div>
                                            <!-- /USER AVATAR BADGE -->
                                        </div>
                                        <!-- /USER AVATAR -->
                                    </a>
                                    <!-- /USER STATUS AVATAR -->

                                    <!-- USER STATUS TITLE -->
                                    <p class="user-status-title medium"><a class="bold" href="{{ path('front_group_single', {'slug': group.slug}) }}">{{ group.name }}</a></p>
                                    <!-- /USER STATUS TITLE -->

                                    <!-- USER STATUS TEXT -->
                                    {% set difference = date(post.publishedAt).diff(date('now')) %}
                                    {% set days = difference.days %}
                                    {% set hours = difference.h %}
                                    {% set minutes = difference.i %}
                                    <p class="user-status-text small">
                                        {% if days > 0 %}
                                            il y a {{ days }} jours
                                        {% elseif hours > 0 %}
                                            il y a {{ hours }} heures
                                        {% else %}
                                            il y a {{ minutes }} minutes
                                        {% endif %}
                                    </p>
                                    <!-- /USER STATUS TEXT -->
                                </div>
                                <!-- /USER STATUS -->

                                <!-- WIDGET BOX STATUS TEXT -->
                                <p class="widget-box-status-text">{{ post.text }}</p>
                                <!-- /WIDGET BOX STATUS TEXT -->
                                {% for photo in post.photo %}
                                    <figure class="widget-box-picture popup-picture-trigger photo-post" data-post="{{ post.id }}">
                                        <img src="{{ asset( constant('App\\Services\\File\\UploadFile::PHOTO_POST_UPLOAD_DIR')) ~ photo.url }}" alt="cover-04">
                                    </figure>
                                {% endfor %}

                                <!-- CONTENT ACTIONS -->
                                <div class="content-actions">
                                    <!-- CONTENT ACTION -->
                                    <div class="content-action">
                                        <!-- META LINE -->
                                        <div class="meta-line">
                                            <!-- META LINE LIST -->
                                            <div class="meta-line-list reaction-item-list" id="react-{{ post.id }}" data-post="{{ post.id }}">
                                                <!-- REACTION ITEM -->
                                                {% for react in post_react.getReactPost(post) %}
                                                    <div class="reaction-item">
                                                        <!-- REACTION IMAGE -->
                                                        <img class="reaction-image reaction-item-dropdown-trigger" src="{{ asset('img/reaction/' ~ react.type ~ '.png') }}" alt="reaction-{{ react.type }}">
                                                        <!-- /REACTION IMAGE -->

                                                        <!-- SIMPLE DROPDOWN -->
                                                        <div class="simple-dropdown padded reaction-item-dropdown">
                                                            <!-- SIMPLE DROPDOWN TEXT -->
                                                            <p class="simple-dropdown-text"><img class="reaction" src="{{ asset('img/reaction/' ~ react.type ~ '.png') }}" alt="reaction-{{ react.type }}"> <span class="bold">{{ react.type }}</span></p>
                                                            <!-- /SIMPLE DROPDOWN TEXT -->

                                                            <!-- SIMPLE DROPDOWN TEXT -->
                                                            <p class="simple-dropdown-text">{{ react.count }}</p>
                                                            <!-- /SIMPLE DROPDOWN TEXT -->
                                                        </div>
                                                        <!-- /SIMPLE DROPDOWN -->
                                                    </div>
                                                    <!-- /REACTION ITEM -->
                                                {% endfor %}
                                            </div>
                                            <!-- /META LINE LIST -->

                                            <!-- META LINE TEXT -->
                                            <p class="meta-line-text ml-1">{{ post_react.countReactPost(post) }}</p>
                                            <!-- /META LINE TEXT -->
                                        </div>
                                        <!-- /META LINE -->
                                    </div>
                                    <!-- /CONTENT ACTION -->

                                    <!-- CONTENT ACTION -->
                                    <div class="content-action">
                                        <!-- META LINE -->
                                        <div class="meta-line">
                                            <!-- META LINE LINK -->
                                            <p class="meta-line-link">{{ post.commentPosts|length }} Commentaires</p>
                                            <!-- /META LINE LINK -->
                                        </div>
                                        <!-- /META LINE -->

                                    </div>
                                    <!-- /CONTENT ACTION -->
                                </div>
                                <!-- /CONTENT ACTIONS -->
                            </div>
                            <!-- /WIDGET BOX STATUS CONTENT -->
                        </div>
                        <!-- /WIDGET BOX STATUS -->

                        <!-- POST OPTIONS -->
                        <div class="post-options">
                            <!-- POST OPTION WRAP -->
                            <div class="post-option-wrap">
                                <!-- POST OPTION -->
                                <div class="post-option reaction-options-dropdown-trigger">
                                    <!-- POST OPTION ICON -->
                                    <svg class="post-option-icon icon-thumbs-up">
                                        <use xlink:href="#svg-thumbs-up"></use>
                                    </svg>
                                    <!-- /POST OPTION ICON -->

                                    <!-- POST OPTION TEXT -->
                                    <p class="post-option-text" id="like-{{ post.id }}" {% if post_react.getIfReactUser(post, app.user) %}style="color:#23d2e2"{% endif %}>Réagir!</p>
                                    <!-- /POST OPTION TEXT -->
                                </div>
                                <!-- /POST OPTION -->

                                <!-- REACTION OPTIONS -->
                                <div class="reaction-options reaction-options-dropdown">
                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="like" data-post="{{ post.id }}" id="react-like" data-title="Like">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/like.png') }}" alt="reaction-like">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="love" data-post="{{ post.id }}" id="react-love" data-title="Love">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/love.png') }}" alt="reaction-love">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="dislike" data-post="{{ post.id }}" id="react-dislike" data-title="Dislike">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/dislike.png') }}" alt="reaction-dislike">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="happy" data-post="{{ post.id }}" id="react-happy" data-title="Happy">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/happy.png') }}" alt="reaction-happy">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="funny" data-post="{{ post.id }}" id="react-funny" data-title="Funny">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/funny.png') }}" alt="reaction-funny">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="wow" data-post="{{ post.id }}" id="react-wow" data-title="Wow">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/wow.png') }}" alt="reaction-wow">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="angry" data-post="{{ post.id }}" id="react-angry" data-title="Angry">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" id="react-angry" src="{{ asset('img/reaction/angry.png') }}" alt="reaction-angry">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->

                                    <!-- REACTION OPTION -->
                                    <div class="reaction-option text-tooltip-tft reacting" data-react="sad" data-post="{{ post.id }}" data-title="Sad" id="react-sad">
                                        <!-- REACTION OPTION IMAGE -->
                                        <img class="reaction-option-image" src="{{ asset('img/reaction/sad.png') }}" alt="reaction-sad">
                                        <!-- /REACTION OPTION IMAGE -->
                                    </div>
                                    <!-- /REACTION OPTION -->
                                </div>
                                <!-- /REACTION OPTIONS -->
                            </div>
                            <!-- /POST OPTION WRAP -->

                            <!-- POST OPTION -->
                            <div class="post-option see-comments" data-post="{{ post.id }}" data-page="1">
                                <svg class="post-option-icon icon-comment">
                                    <use xlink:href="#svg-comment"></use>
                                </svg>
                                <p class="post-option-text">Commentaires</p></div>
                        </div>
                        <!-- /POST OPTIONS -->
                    </div>
            {% endfor %}
            <div class="loader-bars" id="load-bar">
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
                <div class="loader-bar"></div>
            </div>
            <!-- /LOADER BARS -->
        </div>
        <!-- /GRID COLUMN -->

        <!-- GRID COLUMN -->
        <div class="grid-column">

            <!-- WIDGET BOX -->
            <div class="widget-box">

                <!-- WIDGET BOX TITLE -->
                {% set totalPhoto = 0 %}
                {% for post in posts %}
                    {% if post.photo %}
                        {% set totalPhoto = totalPhoto + post.photo|length %}
                    {% endif %}
                {% endfor %}
                <p class="widget-box-title">Photos <span class="highlighted">{{ totalPhoto }}</span></p>
                <!-- /WIDGET BOX TITLE -->

                <!-- WIDGET BOX CONTENT -->
                <div class="widget-box-content">
                    <!-- PICTURE ITEM LIST -->
                    <div class="picture-item-list small">
                        <!-- PICTURE ITEM -->
                        {% set countPhoto = 0 %}
                        {% for post in posts %}
                            {% if post.photo %}
                                {% for photo in post.photo %}
                                    {% set countPhoto = countPhoto + 1 %}
                                    {% if countPhoto < 12 %}
                                        <div class="picture-item popup-picture-trigger">
                                            <!-- PICTURE -->
                                            <figure class="picture round liquid photo-post" data-post="{{ post.id }}">
                                                <img src="{{ asset( constant('App\\Services\\File\\UploadFile::PHOTO_POST_UPLOAD_DIR')) ~ photo.url }}" alt="avatar-24">
                                            </figure>
                                            <!-- /PICTURE -->
                                        </div>
                                    {% endif %}
                                {% endfor %}
                            {% endif %}
                        {% endfor %}

                        {% if (totalPhoto - countPhoto) > 0 %}
                        <!-- PICTURE ITEM -->
                        <a class="picture-item" href="#">
                            <!-- PICTURE -->
                            <figure class="picture round liquid">
                                <img src="img/cover/29.jpg" alt="cover-29">
                            </figure>
                            <!-- /PICTURE -->

                            <!-- PICTURE ITEM OVERLAY -->
                            <div class="picture-item-overlay round">
                                <!-- PICTURE ITEM OVERLAY TEXT -->
                                <p class="picture-item-overlay-text">+{{ totalPhoto - countPhoto }}</p>
                                <!-- /PICTURE ITEM OVERLAY TEXT -->
                            </div>
                            <!-- /PICTURE ITEM OVERLAY -->
                        </a>
                        {% endif %}
                        <!-- /PICTURE ITEM -->
                    </div>
                    <!-- /PICTURE ITEM LIST -->
                </div>
                <!-- /WIDGET BOX CONTENT -->
            </div>
            <!-- /WIDGET BOX -->

            <!-- WIDGET BOX -->
            <div class="widget-box">
                <!-- WIDGET BOX SETTINGS -->
                <div class="widget-box-settings">
                    <!-- POST SETTINGS WRAP -->
                    <div class="post-settings-wrap">
                        <!-- POST SETTINGS -->
                        <div class="post-settings widget-box-post-settings-dropdown-trigger">
                            <!-- POST SETTINGS ICON -->
                            <svg class="post-settings-icon icon-more-dots">
                                <use xlink:href="#svg-more-dots"></use>
                            </svg>
                            <!-- /POST SETTINGS ICON -->
                        </div>
                        <!-- /POST SETTINGS -->

                        <!-- SIMPLE DROPDOWN -->
                        <div class="simple-dropdown widget-box-post-settings-dropdown">
                            <!-- SIMPLE DROPDOWN LINK -->
                            <p class="simple-dropdown-link">Widget Settings</p>
                            <!-- /SIMPLE DROPDOWN LINK -->
                        </div>
                        <!-- /SIMPLE DROPDOWN -->
                    </div>
                    <!-- /POST SETTINGS WRAP -->
                </div>
                <!-- /WIDGET BOX SETTINGS -->

                <!-- WIDGET BOX TITLE -->
                <p class="widget-box-title">Discussions <span class="highlighted">16</span></p>
                <!-- /WIDGET BOX TITLE -->

                <!-- WIDGET BOX CONTENT -->
                <div class="widget-box-content">
                    <!-- FILTERS -->
                    <div class="filters">
                        <!-- FILTER -->
                        <p class="filter">Newest</p>
                        <!-- /FILTER -->

                        <!-- FILTER -->
                        <p class="filter active">Popular</p>
                        <!-- /FILTER -->
                    </div>
                    <!-- /FILTERS -->

                    <!-- POST PREVIEW LINE LIST -->
                    <div class="post-preview-line-list">
                        <!-- POST PREVIEW LINE -->
                        <div class="post-preview-line">
                            <!-- POST PREVIEW LINE TITLE -->
                            <p class="post-preview-line-title"><a href="forums-discussion.html">In your opinion, who has the best cosplay?</a></p>
                            <!-- /POST PREVIEW LINE TITLE -->

                            <!-- POST PREVIEW LINE META -->
                            <div class="post-preview-line-meta">
                                <!-- USER AVATAR -->
                                <a class="user-avatar micro no-border" href="profile-timeline.html">
                                    <!-- USER AVATAR CONTENT -->
                                    <div class="user-avatar-content">
                                        <!-- HEXAGON -->
                                        <div class="hexagon-image-18-20" data-src="img/avatar/05.jpg"></div>
                                        <!-- /HEXAGON -->
                                    </div>
                                    <!-- /USER AVATAR CONTENT -->
                                </a>
                                <!-- /USER AVATAR -->

                                <!-- POST PREVIEW LINE AUTHOR -->
                                <p class="post-preview-line-author"><a href="profile-timeline.html">By Neko Bebop</a></p>
                                <!-- /POST PREVIEW LINE AUTHOR -->

                                <!-- POST PREVIEW LINE TIMESTAMP -->
                                <p class="post-preview-line-timestamp">2 weeks ago</p>
                                <!-- /POST PREVIEW LINE TIMESTAMP -->
                            </div>
                            <!-- /POST PREVIEW LINE META -->
                        </div>
                        <!-- /POST PREVIEW LINE -->

                        <!-- POST PREVIEW LINE -->
                        <div class="post-preview-line">
                            <!-- POST PREVIEW LINE TITLE -->
                            <p class="post-preview-line-title"><a href="forums-discussion.html">Preparing everything for CosWorld 2019, show your works here!</a></p>
                            <!-- /POST PREVIEW LINE TITLE -->

                            <!-- POST PREVIEW LINE META -->
                            <div class="post-preview-line-meta">
                                <!-- USER AVATAR -->
                                <a class="user-avatar micro no-border" href="profile-timeline.html">
                                    <!-- USER AVATAR CONTENT -->
                                    <div class="user-avatar-content">
                                        <!-- HEXAGON -->
                                        <div class="hexagon-image-18-20" data-src="img/avatar/03.jpg"></div>
                                        <!-- /HEXAGON -->
                                    </div>
                                    <!-- /USER AVATAR CONTENT -->
                                </a>
                                <!-- /USER AVATAR -->

                                <!-- POST PREVIEW LINE AUTHOR -->
                                <p class="post-preview-line-author"><a href="profile-timeline.html">By Nick Grissom</a></p>
                                <!-- /POST PREVIEW LINE AUTHOR -->

                                <!-- POST PREVIEW LINE TIMESTAMP -->
                                <p class="post-preview-line-timestamp">13 hours ago</p>
                                <!-- /POST PREVIEW LINE TIMESTAMP -->
                            </div>
                            <!-- /POST PREVIEW LINE META -->
                        </div>
                        <!-- /POST PREVIEW LINE -->

                        <!-- POST PREVIEW LINE -->
                        <div class="post-preview-line">
                            <!-- POST PREVIEW LINE TITLE -->
                            <p class="post-preview-line-title"><a href="forums-discussion.html">Official Topic! Let's organize the global meetups for all continents!</a></p>
                            <!-- /POST PREVIEW LINE TITLE -->

                            <!-- POST PREVIEW LINE META -->
                            <div class="post-preview-line-meta">
                                <!-- USER AVATAR -->
                                <a class="user-avatar micro no-border" href="profile-timeline.html">
                                    <!-- USER AVATAR CONTENT -->
                                    <div class="user-avatar-content">
                                        <!-- HEXAGON -->
                                        <div class="hexagon-image-18-20" data-src="img/avatar/02.jpg"></div>
                                        <!-- /HEXAGON -->
                                    </div>
                                    <!-- /USER AVATAR CONTENT -->
                                </a>
                                <!-- /USER AVATAR -->

                                <!-- POST PREVIEW LINE AUTHOR -->
                                <p class="post-preview-line-author"><a href="profile-timeline.html">By Destroy Dex</a></p>
                                <!-- /POST PREVIEW LINE AUTHOR -->

                                <!-- POST PREVIEW LINE TIMESTAMP -->
                                <p class="post-preview-line-timestamp">5 days ago</p>
                                <!-- /POST PREVIEW LINE TIMESTAMP -->
                            </div>
                            <!-- /POST PREVIEW LINE META -->
                        </div>
                        <!-- /POST PREVIEW LINE -->

                        <!-- POST PREVIEW LINE -->
                        <div class="post-preview-line">
                            <!-- POST PREVIEW LINE TITLE -->
                            <p class="post-preview-line-title"><a href="forums-discussion.html">Share your cosplay tips here! Tutorials, DIY's, paints and more</a></p>
                            <!-- /POST PREVIEW LINE TITLE -->

                            <!-- POST PREVIEW LINE META -->
                            <div class="post-preview-line-meta">
                                <!-- USER AVATAR -->
                                <a class="user-avatar micro no-border" href="profile-timeline.html">
                                    <!-- USER AVATAR CONTENT -->
                                    <div class="user-avatar-content">
                                        <!-- HEXAGON -->
                                        <div class="hexagon-image-18-20" data-src="img/avatar/05.jpg"></div>
                                        <!-- /HEXAGON -->
                                    </div>
                                    <!-- /USER AVATAR CONTENT -->
                                </a>
                                <!-- /USER AVATAR -->

                                <!-- POST PREVIEW LINE AUTHOR -->
                                <p class="post-preview-line-author"><a href="profile-timeline.html">By Neko Bebop</a></p>
                                <!-- /POST PREVIEW LINE AUTHOR -->

                                <!-- POST PREVIEW LINE TIMESTAMP -->
                                <p class="post-preview-line-timestamp">20 hours ago</p>
                                <!-- /POST PREVIEW LINE TIMESTAMP -->
                            </div>
                            <!-- /POST PREVIEW LINE META -->
                        </div>
                        <!-- /POST PREVIEW LINE -->

                        <!-- POST PREVIEW LINE -->
                        <div class="post-preview-line">
                            <!-- POST PREVIEW LINE TITLE -->
                            <p class="post-preview-line-title"><a href="forums-discussion.html">Check out all the pictures I took at the CosplayWonder 2018</a></p>
                            <!-- /POST PREVIEW LINE TITLE -->

                            <!-- POST PREVIEW LINE META -->
                            <div class="post-preview-line-meta">
                                <!-- USER AVATAR -->
                                <a class="user-avatar micro no-border" href="profile-timeline.html">
                                    <!-- USER AVATAR CONTENT -->
                                    <div class="user-avatar-content">
                                        <!-- HEXAGON -->
                                        <div class="hexagon-image-18-20" data-src="img/avatar/07.jpg"></div>
                                        <!-- /HEXAGON -->
                                    </div>
                                    <!-- /USER AVATAR CONTENT -->
                                </a>
                                <!-- /USER AVATAR -->

                                <!-- POST PREVIEW LINE AUTHOR -->
                                <p class="post-preview-line-author"><a href="profile-timeline.html">By Sarah Diamond</a></p>
                                <!-- /POST PREVIEW LINE AUTHOR -->

                                <!-- POST PREVIEW LINE TIMESTAMP -->
                                <p class="post-preview-line-timestamp">19 days ago</p>
                                <!-- /POST PREVIEW LINE TIMESTAMP -->
                            </div>
                            <!-- /POST PREVIEW LINE META -->
                        </div>
                        <!-- /POST PREVIEW LINE -->
                    </div>
                    <!-- /POST PREVIEW LINE LIST -->
                </div>
                <!-- WIDGET BOX CONTENT -->
            </div>
            <!-- /WIDGET BOX -->

            <!-- WIDGET BOX -->
            <div class="widget-box">
                <!-- WIDGET BOX SETTINGS -->
                <div class="widget-box-settings">
                    <!-- POST SETTINGS WRAP -->
                    <div class="post-settings-wrap">
                        <!-- POST SETTINGS -->
                        <div class="post-settings widget-box-post-settings-dropdown-trigger">
                            <!-- POST SETTINGS ICON -->
                            <svg class="post-settings-icon icon-more-dots">
                                <use xlink:href="#svg-more-dots"></use>
                            </svg>
                            <!-- /POST SETTINGS ICON -->
                        </div>
                        <!-- /POST SETTINGS -->

                        <!-- SIMPLE DROPDOWN -->
                        <div class="simple-dropdown widget-box-post-settings-dropdown">
                            <!-- SIMPLE DROPDOWN LINK -->
                            <p class="simple-dropdown-link">Widget Settings</p>
                            <!-- /SIMPLE DROPDOWN LINK -->
                        </div>
                        <!-- /SIMPLE DROPDOWN -->
                    </div>
                    <!-- /POST SETTINGS WRAP -->
                </div>
                <!-- /WIDGET BOX SETTINGS -->

                <!-- WIDGET BOX TITLE -->
                <p class="widget-box-title">Videos <span class="highlighted">4</span></p>
                <!-- /WIDGET BOX TITLE -->

                <!-- WIDGET BOX CONTENT -->
                <div class="widget-box-content">
                    <!-- VIDEO BOX LIST -->
                    <div class="video-box-list">
                        <!-- VIDEO BOX -->
                        <div class="video-box small">
                            <!-- VIDEO BOX COVER -->
                            <div class="video-box-cover popup-video-trigger">
                                <!-- VIDEO BOX COVER IMAGE -->
                                <figure class="video-box-cover-image liquid">
                                    <img src="img/cover/30.jpg" alt="cover-30">
                                </figure>
                                <!-- /VIDEO BOX COVER IMAGE -->

                                <!-- PLAY BUTTON -->
                                <div class="play-button">
                                    <!-- PLAY BUTTON ICON -->
                                    <svg class="play-button-icon icon-play">
                                        <use xlink:href="#svg-play"></use>
                                    </svg>
                                    <!-- /PLAY BUTTON ICON -->
                                </div>
                                <!-- /PLAY BUTTON -->

                                <!-- VIDEO BOX INFO -->
                                <div class="video-box-info">
                                    <!-- VIDEO BOX TITLE -->
                                    <p class="video-box-title">My Latest Cosplay</p>
                                    <!-- /VIDEO BOX TITLE -->

                                    <!-- VIDEO BOX TEXT -->
                                    <p class="video-box-text">1 hour ago</p>
                                    <!-- /VIDEO BOX TEXT -->
                                </div>
                                <!-- /VIDEO BOX INFO -->
                            </div>
                            <!-- /VIDEO BOX COVER -->
                        </div>
                        <!-- /VIDEO BOX -->

                        <!-- VIDEO BOX -->
                        <div class="video-box small">
                            <!-- VIDEO BOX COVER -->
                            <div class="video-box-cover popup-video-trigger">
                                <!-- VIDEO BOX COVER IMAGE -->
                                <figure class="video-box-cover-image liquid">
                                    <img src="img/cover/44.jpg" alt="cover-44">
                                </figure>
                                <!-- /VIDEO BOX COVER IMAGE -->

                                <!-- PLAY BUTTON -->
                                <div class="play-button">
                                    <!-- PLAY BUTTON ICON -->
                                    <svg class="play-button-icon icon-play">
                                        <use xlink:href="#svg-play"></use>
                                    </svg>
                                    <!-- /PLAY BUTTON ICON -->
                                </div>
                                <!-- /PLAY BUTTON -->

                                <!-- VIDEO BOX INFO -->
                                <div class="video-box-info">
                                    <!-- VIDEO BOX TITLE -->
                                    <p class="video-box-title">Jenny primary Photoshoot</p>
                                    <!-- /VIDEO BOX TITLE -->

                                    <!-- VIDEO BOX TEXT -->
                                    <p class="video-box-text">12 days ago</p>
                                    <!-- /VIDEO BOX TEXT -->
                                </div>
                                <!-- /VIDEO BOX INFO -->
                            </div>
                            <!-- /VIDEO BOX COVER -->
                        </div>
                        <!-- /VIDEO BOX -->

                        <!-- VIDEO BOX -->
                        <div class="video-box small">
                            <!-- VIDEO BOX COVER -->
                            <div class="video-box-cover popup-video-trigger">
                                <!-- VIDEO BOX COVER IMAGE -->
                                <figure class="video-box-cover-image liquid">
                                    <img src="img/cover/42.jpg" alt="cover-42">
                                </figure>
                                <!-- /VIDEO BOX COVER IMAGE -->

                                <!-- PLAY BUTTON -->
                                <div class="play-button">
                                    <!-- PLAY BUTTON ICON -->
                                    <svg class="play-button-icon icon-play">
                                        <use xlink:href="#svg-play"></use>
                                    </svg>
                                    <!-- /PLAY BUTTON ICON -->
                                </div>
                                <!-- /PLAY BUTTON -->

                                <!-- VIDEO BOX INFO -->
                                <div class="video-box-info">
                                    <!-- VIDEO BOX TITLE -->
                                    <p class="video-box-title">Tabatha Arcade Gaming Tips</p>
                                    <!-- /VIDEO BOX TITLE -->

                                    <!-- VIDEO BOX TEXT -->
                                    <p class="video-box-text">5 days ago</p>
                                    <!-- /VIDEO BOX TEXT -->
                                </div>
                                <!-- /VIDEO BOX INFO -->
                            </div>
                            <!-- /VIDEO BOX COVER -->
                        </div>
                        <!-- /VIDEO BOX -->
                    </div>
                    <!-- /VIDEO BOX LIST -->
                </div>
                <!-- WIDGET BOX CONTENT -->
            </div>
            <!-- /WIDGET BOX -->
        </div>
        <!-- /GRID COLUMN -->
    </div>
{% endblock %}

{% block javascript %}
{{ parent() }}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {

    const inpFile = document.getElementById('file-input');
    const form = document.getElementById('form-post');



    form.addEventListener('submit', (e) => {
      e.preventDefault();

      let form = e.target;
      const formData = new FormData(form);

      formData.append('inpFile', inpFile.files[0])

      fetch(form.action, { method: form.method, body: formData })
        .then(response => response.json())
        .then(data => {
            document.getElementById('next_post').insertAdjacentHTML('afterbegin', data.post.content);
            document.getElementById('quick-post-text').value = '';
            document.getElementById('nb_published').textContent++;
            document.getElementById('block_preview').src = '';
            /*---------------------------
                USER AVATAR HEXAGONS
            ---------------------------*/
            app.plugins.createHexagon({
              container: '.hexagon-148-164',
              width: 148,
              height: 164,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .74
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-132',
              width: 120,
              height: 132,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-82-90',
              width: 82,
              height: 90,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-68-74',
              width: 68,
              height: 74,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-50-56',
              width: 50,
              height: 56,
              roundedCorners: true,
              roundedCornerRadius: 2,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-32-34',
              width: 32,
              height: 34,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-32-36',
              width: 32,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-26-28',
              width: 26,
              height: 28,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-28-32',
              width: 28,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-16-18',
              width: 16,
              height: 18,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-130',
              width: 120,
              height: 130,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-108',
              width: 100,
              height: 108,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-124-136',
              width: 124,
              height: 136,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-84-92',
              width: 84,
              height: 92,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-34-36',
              width: 34,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-24-26',
              width: 24,
              height: 26,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-18-20',
              width: 18,
              height: 20,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-overlay-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: 'rgba(97, 93, 250, .9)',
              fill: true
            });
        });
      return false;
    });
});
</script>
<script>
is_processing = false;
last_page = false;
page = 2;
function addMoreElements() {
    is_processing = true;

    $.ajax({
        type: "POST",
        //FOS Routing
        url: "{{ path('front_group_single', {'slug': group.slug}) }}",
        data: {page: page},
        success: function(data) {
            if (data.posts.content) {

                $('#fil_actu_posts').append(data.posts.content);
                $('#load-bar').css('display', 'none');
                page = page + 1;

                app.plugins.createHexagon({
                  container: '.hexagon-148-164',
                  width: 148,
                  height: 164,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-124-136',
                  width: 124,
                  height: 136,
                  lineWidth: 8,
                  roundedCorners: true,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .74
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-124-136',
                  width: 124,
                  height: 136,
                  lineWidth: 8,
                  roundedCorners: true,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-100-110',
                  width: 100,
                  height: 110,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-120-132',
                  width: 120,
                  height: 132,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-100-110',
                  width: 100,
                  height: 110,
                  lineWidth: 6,
                  roundedCorners: true,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-100-110',
                  width: 100,
                  height: 110,
                  lineWidth: 6,
                  roundedCorners: true,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-82-90',
                  width: 82,
                  height: 90,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-100-110',
                  width: 100,
                  height: 110,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-84-92',
                  width: 84,
                  height: 92,
                  lineWidth: 5,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-84-92',
                  width: 84,
                  height: 92,
                  lineWidth: 5,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-68-74',
                  width: 68,
                  height: 74,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-50-56',
                  width: 50,
                  height: 56,
                  roundedCorners: true,
                  roundedCornerRadius: 2,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-40-44',
                  width: 40,
                  height: 44,
                  lineWidth: 3,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-40-44',
                  width: 40,
                  height: 44,
                  lineWidth: 3,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-30-32',
                  width: 30,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-40-44',
                  width: 40,
                  height: 44,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-32-34',
                  width: 32,
                  height: 34,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-32-36',
                  width: 32,
                  height: 36,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-26-28',
                  width: 26,
                  height: 28,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-28-32',
                  width: 28,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-22-24',
                  width: 22,
                  height: 24,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-22-24',
                  width: 22,
                  height: 24,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-16-18',
                  width: 16,
                  height: 18,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-120-130',
                  width: 120,
                  height: 130,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-100-108',
                  width: 100,
                  height: 108,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-124-136',
                  width: 124,
                  height: 136,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-84-92',
                  width: 84,
                  height: 92,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-34-36',
                  width: 34,
                  height: 36,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-40-44',
                  width: 40,
                  height: 44,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-24-26',
                  width: 24,
                  height: 26,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-18-20',
                  width: 18,
                  height: 20,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-overlay-30-32',
                  width: 30,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: 'rgba(97, 93, 250, .9)',
                  fill: true
                });

                app.plugins.createDropdown({
                  trigger: '.widget-box-post-settings-dropdown-trigger',
                  container: '.widget-box-post-settings-dropdown',
                  offset: {
                    top: 30,
                    right: 9
                  },
                  animation: {
                    type: 'translate-top',
                    speed: .3,
                    translateOffset: {
                      vertical: 20
                    }
                  }
                });

                app.plugins.createDropdown({
                  trigger: '.reaction-item-dropdown-trigger',
                  container: '.reaction-item-dropdown',
                  triggerEvent: 'hover',
                  offset: {
                    bottom: 38,
                    left: -16
                  },
                  animation: {
                    type: 'translate-bottom',
                    speed: .3,
                    translateOffset: {
                      vertical: 20
                    }
                  }
                });

                app.plugins.createDropdown({
                  trigger: '.reaction-options-dropdown-trigger',
                  container: '.reaction-options-dropdown',
                  triggerEvent: 'click',
                  offset: {
                    bottom: 54,
                    left: -16
                  },
                  animation: {
                    type: 'translate-bottom',
                    speed: .3,
                    translateOffset: {
                      vertical: 20
                    }
                  },
                  closeOnDropdownClick: true
                });

                app.plugins.createDropdown({
                  trigger: '.reaction-options-small-dropdown-trigger',
                  container: '.reaction-options-small-dropdown',
                  triggerEvent: 'click',
                  offset: {
                    bottom: 30,
                    left: -80
                  },
                  animation: {
                    type: 'translate-bottom',
                    speed: .3,
                    translateOffset: {
                      vertical: 16
                    }
                  },
                  closeOnDropdownClick: true
                });

                app.plugins.createDropdown({
                  trigger: '.post-settings-dropdown-trigger',
                  container: '.post-settings-dropdown',
                  offset: {
                    bottom: 30,
                    right: 0
                  },
                  animation: {
                    type: 'translate-bottom',
                    speed: .3,
                    translateOffset: {
                      vertical: 16
                    }
                  }
                });

                //The server can answer saying it's the last page so that the browser doesn't make anymore calls
                last_page = false;
            } else {
                last_page = true;
            }
            is_processing = false;
        },
        error: function(data) {
            is_processing = false;
        }
    });
}

$(window).scroll(function() {
    var wintop = $(window).scrollTop(), docheight = $(document).height(), winheight = $(window).height();
    //Modify this parameter to establish how far down do you want to make the ajax call
    var scrolltrigger = 0.80;
    if ((wintop / (docheight - winheight)) > scrolltrigger) {
    //I added the is_processing variable to keep the ajax asynchronous but avoiding making the same call multiple times

        if (last_page === false && is_processing === false) {

            addMoreElements();
        }
    }
});
</script>

<script>
let photoPost = document.querySelectorAll('.photo-post');

photoPost.forEach(function(post) {

  $(post).off().on('click', function() {
    let postId = null;
    postId = post.getAttribute('data-post');

    const data = {
          postId: postId
      };

    let datas = new FormData();
    datas.append("data", JSON.stringify(data));

    async function loadPicture() {
        let loading = document.getElementById('load-bar-picture');
        loading.style.display = 'inline-flex';
        loading.style.position = 'fixed';
        loading.style.top = '50%';
        loading.style.left = '50%';
        loading.style.zIndex = '999999';

         await fetch("{{ path('front_fil_get_picture') }}", { method: 'POST', body: datas})
        .then(response => response.json())
        .then(data => {
        loading.style.display = 'none';
        document.getElementById('cover_picture').src = `{{ asset( constant('App\\Services\\File\\UploadFile::PHOTO_POST_UPLOAD_DIR')) }}${data.post[0].photo[0].url}`;
        document.getElementById('post_text').textContent = data.post[0].text;

        let datePost = new Date(data.post[0].publishedAt);

        document.getElementById('time_to_post').textContent = `il y a ${datePost.getHours()}h`;

        document.getElementById('link_user').textContent = data.post[0].userGroup.name;
        document.getElementById('link_user').href = `/profil/${data.post[0].userGroup.name}`;

        document.getElementById('list_react_post').innerHTML = '';
        let countReactions = 0;
        for (const react of data.reacts) {
            countReactions++;
            const reactHtml = `<div class="reaction-item">
                                        <img class="reaction-image reaction-item-dropdown-trigger" src="/img/reaction/${react.type}.png" alt="reaction-${react.type}">
                                        <div class="simple-dropdown padded reaction-item-dropdown">
                                            <p class="simple-dropdown-text"><img class="reaction" src="/img/reaction/${react.type}.png" alt="reaction-love"> <span class="bold">${react.type}</span></p>
                                            <p class="simple-dropdown-text" id="count_react">${react.count}</p>
                                        </div>
                                    </div>`;


            document.getElementById('list_react_post').innerHTML = reactHtml;

            app.plugins.createDropdown({
              trigger: '.reaction-item-dropdown-trigger',
              container: '.reaction-item-dropdown',
              triggerEvent: 'hover',
              offset: {
                bottom: 38,
                left: -16
              },
              animation: {
                type: 'translate-bottom',
                speed: .3,
                translateOffset: {
                  vertical: 20
                }
              }
            });

        }

        document.getElementById('count_reactions').textContent = countReactions;
        document.getElementById('comment_list_post').innerHTML = '';

        for (const comment of data.comments) {

            const htmlComment = `<div class="post-comment">
                <a class="user-avatar small no-outline" href="/profil/${comment.user.pseudo}">
                    <div class="user-avatar-content">
                        <div class="hexagon-image-30-32" data-src="/{{ constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR') }}${comment.user.avatar ? comment.user.avatar : 'img/avatar/01.jpg'}"></div>
                    </div>
                    <div class="user-avatar-progress">
                        <div class="hexagon-progress-40-44"></div>
                    </div>
                    <div class="user-avatar-progress-border">
                        <div class="hexagon-border-40-44"></div>
                    </div>
                    <div class="user-avatar-badge">
                        <div class="user-avatar-badge-border">
                            <div class="hexagon-22-24"></div>
                        </div>
                        <div class="user-avatar-badge-content">
                            <div class="hexagon-dark-16-18"></div>
                        </div>
                        <p class="user-avatar-badge-text">12</p>
                    </div>
                </a>
                <p class="post-comment-text"><a class="post-comment-text-author" href="/profil/${comment.user.pseudo}">${comment.user.pseudo}</a>${comment.text}</p>
            </div>`;

            document.getElementById('comment_list_post').insertAdjacentHTML('beforeend', htmlComment);

            app.plugins.createHexagon({
              container: '.hexagon-148-164',
              width: 148,
              height: 164,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .74
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-132',
              width: 120,
              height: 132,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-82-90',
              width: 82,
              height: 90,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-68-74',
              width: 68,
              height: 74,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-50-56',
              width: 50,
              height: 56,
              roundedCorners: true,
              roundedCornerRadius: 2,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-32-34',
              width: 32,
              height: 34,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-32-36',
              width: 32,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-26-28',
              width: 26,
              height: 28,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-28-32',
              width: 28,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-16-18',
              width: 16,
              height: 18,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-130',
              width: 120,
              height: 130,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-108',
              width: 100,
              height: 108,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-124-136',
              width: 124,
              height: 136,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-84-92',
              width: 84,
              height: 92,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-34-36',
              width: 34,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-24-26',
              width: 24,
              height: 26,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-18-20',
              width: 18,
              height: 20,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-overlay-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: 'rgba(97, 93, 250, .9)',
              fill: true
            });
        }

        var links = document.getElementsByClassName('reacting-picture');

        // For each <li> inside #links
        for (var i = 0; i < links.length; i++) {
            var link = links[i];
            link.addEventListener('click', (e) => {
                let reactIcon = e.target.parentNode;

                const dataPostId = postId;
                const dataReact = reactIcon.getAttribute('data-react');
                const data = {
                    postId: dataPostId,
                    userId: "{{ app.user.id }}",
                    react: dataReact
                };

                let datas = new FormData();
                datas.append("data", JSON.stringify(data));

                fetch("{{ path('front_react_post_add') }}", { method: 'POST', body: datas })
                    .then(response => response.json())
                    .then(data => {

                        const postId = document.getElementById(`like-picture`);
                        postId.style.fill = '#23d2e2';

                        const reactId = document.getElementById(`list_react_post`);
                        reactId.innerHTML = data.react.content;

                        app.plugins.createDropdown({
                            trigger: '.reaction-item-dropdown-trigger',
                            container: '.reaction-item-dropdown',
                            triggerEvent: 'hover',
                            offset: {
                                bottom: 38,
                                left: -16
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 20
                                }
                            }
                        });

                        app.plugins.createDropdown({
                            trigger: '.reaction-options-dropdown-trigger',
                            container: '.reaction-options-dropdown',
                            triggerEvent: 'click',
                            offset: {
                                bottom: 54,
                                left: -16
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 20
                                }
                            },
                            closeOnDropdownClick: true
                        });

                        app.plugins.createDropdown({
                            trigger: '.reaction-options-small-dropdown-trigger',
                            container: '.reaction-options-small-dropdown',
                            triggerEvent: 'click',
                            offset: {
                                bottom: 30,
                                left: -80
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 16
                                }
                            },
                            closeOnDropdownClick: true
                        });
                    });
            });
        }

        const commentForm = document.getElementById('form_comment_response');
            commentForm.addEventListener('submit', function(e) {
              e.preventDefault();
              e.stopImmediatePropagation();

              let form = e.target;
              const formData = new FormData(form);

              formData.append('postId', postId);

              fetch("{{ path('front_fil_add_comment') }}", { method: "POST", body: formData })
                .then(response => response.json())
                .then(data => {

                    if (data.message === 'ok') {
                        document.getElementById('comment_list_post').insertAdjacentHTML('afterbegin', data.comment.content);
                        document.getElementById('popup-post-reply').value = '';

                        app.plugins.createHexagon({
                          container: '.hexagon-148-164',
                          width: 148,
                          height: 164,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-124-136',
                          width: 124,
                          height: 136,
                          lineWidth: 8,
                          roundedCorners: true,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .74
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-124-136',
                          width: 124,
                          height: 136,
                          lineWidth: 8,
                          roundedCorners: true,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-100-110',
                          width: 100,
                          height: 110,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-120-132',
                          width: 120,
                          height: 132,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-100-110',
                          width: 100,
                          height: 110,
                          lineWidth: 6,
                          roundedCorners: true,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-100-110',
                          width: 100,
                          height: 110,
                          lineWidth: 6,
                          roundedCorners: true,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-82-90',
                          width: 82,
                          height: 90,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-100-110',
                          width: 100,
                          height: 110,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-84-92',
                          width: 84,
                          height: 92,
                          lineWidth: 5,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-84-92',
                          width: 84,
                          height: 92,
                          lineWidth: 5,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-68-74',
                          width: 68,
                          height: 74,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-50-56',
                          width: 50,
                          height: 56,
                          roundedCorners: true,
                          roundedCornerRadius: 2,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-40-44',
                          width: 40,
                          height: 44,
                          lineWidth: 3,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-40-44',
                          width: 40,
                          height: 44,
                          lineWidth: 3,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-30-32',
                          width: 30,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-40-44',
                          width: 40,
                          height: 44,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-32-34',
                          width: 32,
                          height: 34,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-32-36',
                          width: 32,
                          height: 36,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-26-28',
                          width: 26,
                          height: 28,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-28-32',
                          width: 28,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-22-24',
                          width: 22,
                          height: 24,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-22-24',
                          width: 22,
                          height: 24,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-16-18',
                          width: 16,
                          height: 18,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-120-130',
                          width: 120,
                          height: 130,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-100-108',
                          width: 100,
                          height: 108,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-124-136',
                          width: 124,
                          height: 136,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-84-92',
                          width: 84,
                          height: 92,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-34-36',
                          width: 34,
                          height: 36,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-40-44',
                          width: 40,
                          height: 44,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-24-26',
                          width: 24,
                          height: 26,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-18-20',
                          width: 18,
                          height: 20,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-overlay-30-32',
                          width: 30,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: 'rgba(97, 93, 250, .9)',
                          fill: true
                        });
                                }
                            });
                          return false;
                        })
    });
    }
    loadPicture();
  })
});

function displayAvatar() {
    app.plugins.createHexagon({
                  container: '.hexagon-148-164',
                  width: 148,
                  height: 164,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-124-136',
                  width: 124,
                  height: 136,
                  lineWidth: 8,
                  roundedCorners: true,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .74
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-124-136',
                  width: 124,
                  height: 136,
                  lineWidth: 8,
                  roundedCorners: true,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-100-110',
                  width: 100,
                  height: 110,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-120-132',
                  width: 120,
                  height: 132,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-100-110',
                  width: 100,
                  height: 110,
                  lineWidth: 6,
                  roundedCorners: true,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-100-110',
                  width: 100,
                  height: 110,
                  lineWidth: 6,
                  roundedCorners: true,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-82-90',
                  width: 82,
                  height: 90,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-100-110',
                  width: 100,
                  height: 110,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-84-92',
                  width: 84,
                  height: 92,
                  lineWidth: 5,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-84-92',
                  width: 84,
                  height: 92,
                  lineWidth: 5,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-68-74',
                  width: 68,
                  height: 74,
                  roundedCorners: true,
                  roundedCornerRadius: 3,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-50-56',
                  width: 50,
                  height: 56,
                  roundedCorners: true,
                  roundedCornerRadius: 2,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-progress-40-44',
                  width: 40,
                  height: 44,
                  lineWidth: 3,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  gradient: {
                    colors: ['#41efff', '#615dfa']
                  },
                  scale: {
                    start: 0,
                    end: 1,
                    stop: .8
                  }
                });

                app.plugins.createHexagon({
                  container: '.hexagon-border-40-44',
                  width: 40,
                  height: 44,
                  lineWidth: 3,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-30-32',
                  width: 30,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-40-44',
                  width: 40,
                  height: 44,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-32-34',
                  width: 32,
                  height: 34,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-32-36',
                  width: 32,
                  height: 36,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-26-28',
                  width: 26,
                  height: 28,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-28-32',
                  width: 28,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-22-24',
                  width: 22,
                  height: 24,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-22-24',
                  width: 22,
                  height: 24,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#fff',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-dark-16-18',
                  width: 16,
                  height: 18,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: '#45437f',
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-120-130',
                  width: 120,
                  height: 130,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-100-108',
                  width: 100,
                  height: 108,
                  roundedCorners: true,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-124-136',
                  width: 124,
                  height: 136,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-84-92',
                  width: 84,
                  height: 92,
                  roundedCorners: true,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-34-36',
                  width: 34,
                  height: 36,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  fill: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-40-44',
                  width: 40,
                  height: 44,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-24-26',
                  width: 24,
                  height: 26,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-image-18-20',
                  width: 18,
                  height: 20,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  clip: true
                });

                app.plugins.createHexagon({
                  container: '.hexagon-overlay-30-32',
                  width: 30,
                  height: 32,
                  roundedCorners: true,
                  roundedCornerRadius: 1,
                  lineColor: 'rgba(97, 93, 250, .9)',
                  fill: true
                });
}

// Comments
const btnComments = document.getElementsByClassName('see-comments');

for (let btnComment of btnComments) {

    btnComment.addEventListener('click', function() {
        const dataPost = btnComment.getAttribute('data-post');
        const dataPage = btnComment.getAttribute('data-page');

        const data = {
            pageId: dataPage,
            dataPost: dataPost
        };

        let datas = new FormData();
        datas.append("data", JSON.stringify(data));

        fetch("{{ path('front_comment_comments') }}", { method: 'POST', body: datas })
            .then(response => response.json())
            .then(data => {
                const targetComments = btnComment.parentNode;
                btnComment.classList.add('active');
                // Change btn
                btnComment.removeChild(btnComment.lastChild);
                btnComment.insertAdjacentHTML('beforeend', '<p class="post-option-text">Suivants...</p>');

                if (dataPage == 1) {
                    targetComments.insertAdjacentHTML('afterend', data.form.content);
                    targetComments.insertAdjacentHTML('afterend', data.comments.content);
                } else {
                    targetComments.insertAdjacentHTML('afterend', data.comments.content);
                }

                nbPage = parseInt(dataPage);
                nbPage++;
                btnComment.setAttribute('data-page', nbPage);

                // Comment form
                const commentForm = document.getElementById(data.idForm);

                commentForm.addEventListener('submit', function(e) {
                  e.preventDefault();
                  e.stopImmediatePropagation();

                  let form = e.target;
                  const formData = new FormData(form);

                  formData.append('postId', dataPost);

                  fetch("{{ path('front_comment_comments') }}", { method: "POST", body: formData })
                    .then(response => response.json())
                    .then(data => {
                        const targetComments = commentForm.parentNode;
                        targetComments.insertAdjacentHTML('beforebegin', data.comment.content);
                        commentForm.reset();

                        displayAvatar();
                    });
                    return false;
                });


                displayAvatar();
            })
    })

}
</script>
<script>
document.getElementById('discard_post').addEventListener('click', () => {
    document.getElementById('quick-post-text').value = '';
});

function readURL(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            document.getElementById('photo_preview').setAttribute('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);

        let linkElt = document.createElement('button');
        linkElt.id = 'remove_preview';
        linkElt.textContent = 'Supprimer';
        document.getElementById('block_preview').after(linkElt);


        linkElt.addEventListener('click', function() {
          document.getElementById('photo_preview').src = '';
          linkElt.remove();
        });
    }
}

document.getElementById('file-input').addEventListener('change', function(){
    readURL(this);
});
</script>


<script>
let photoPost = document.querySelectorAll('.photo-post');

photoPost.forEach(function(post) {

  $(post).off().on('click', function() {
    let postId = null;
    postId = post.getAttribute('data-post');

    const data = {
          postId: postId
      };

    let datas = new FormData();
    datas.append("data", JSON.stringify(data));

    async function loadPicture() {
        let loading = document.getElementById('load-bar-picture');
        loading.style.display = 'inline-flex';
        loading.style.position = 'fixed';
        loading.style.top = '50%';
        loading.style.left = '50%';
        loading.style.zIndex = '999999';

         await fetch("{{ path('front_fil_get_picture') }}", { method: 'POST', body: datas})
    .then(response => response.json())
    .then(data => {

        loading.style.display = 'none';
        document.getElementById('cover_picture').src = `/{{ asset( constant('App\\Services\\File\\UploadFile::PHOTO_POST_UPLOAD_DIR')) }}${data.post[0].photo[0].url}`;
        document.getElementById('post_text').textContent = data.post[0].text;

        let datePost = new Date(data.post[0].publishedAt);

        document.getElementById('time_to_post').textContent = `il y a ${datePost.getHours()}h`;

        document.getElementById('link_user').textContent = data.post[0].userGroup.name;
        document.getElementById('link_user').href = `/profil/${data.post[0].userGroup.name}`;
        document.getElementById('author_post_img').setAttribute('data-src', `/{{ constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR') }}${data.post[0].userGroup.avatar}`);

        document.getElementById('list_react_post').innerHTML = '';
        let countReactions = 0;
        for (const react of data.reacts) {
            countReactions++;

            const reactHtml = `<div class="reaction-item">
                                        <img class="reaction-image reaction-item-dropdown-trigger" src="/img/reaction/${react.type}.png" alt="reaction-${react.type}">
                                        <div class="simple-dropdown padded reaction-item-dropdown">
                                            <p class="simple-dropdown-text"><img class="reaction" src="/img/reaction/${react.type}.png" alt="reaction-love"> <span class="bold">${react.type}</span></p>
                                            <p class="simple-dropdown-text" id="count_react">${react.count}</p>
                                        </div>
                                    </div>`;

            document.getElementById('list_react_post').innerHTML = reactHtml;

            app.plugins.createDropdown({
              trigger: '.reaction-item-dropdown-trigger',
              container: '.reaction-item-dropdown',
              triggerEvent: 'hover',
              offset: {
                bottom: 38,
                left: -16
              },
              animation: {
                type: 'translate-bottom',
                speed: .3,
                translateOffset: {
                  vertical: 20
                }
              }
            });
        }

        document.getElementById('count_reactions').textContent = countReactions;
        document.getElementById('comment_list_post').innerHTML = '';

        for (const comment of data.comments) {

            const htmlComment = `<div class="post-comment">
                <a class="user-avatar small no-outline" href="/profil/${comment.user.pseudo}">
                    <div class="user-avatar-content">
                        <div class="hexagon-image-30-32" data-src="/{{ constant('App\\Services\\File\\UploadFile::AVATAR_UPLOAD_DIR') }}${comment.user.avatar ? comment.user.avatar : '/img/avatar/01.jpg'}"></div>
                    </div>
                    <div class="user-avatar-progress">
                        <div class="hexagon-progress-40-44"></div>
                    </div>
                    <div class="user-avatar-progress-border">
                        <div class="hexagon-border-40-44"></div>
                    </div>
                    <div class="user-avatar-badge">
                        <div class="user-avatar-badge-border">
                            <div class="hexagon-22-24"></div>
                        </div>
                        <div class="user-avatar-badge-content">
                            <div class="hexagon-dark-16-18"></div>
                        </div>
                        <p class="user-avatar-badge-text">12</p>
                    </div>
                </a>
                <p class="post-comment-text"><a class="post-comment-text-author" href="profile-timeline.html">${comment.user.pseudo}</a>${comment.text}</p>
            </div>`;

            document.getElementById('comment_list_post').insertAdjacentHTML('beforeend', htmlComment);

            app.plugins.createHexagon({
              container: '.hexagon-148-164',
              width: 148,
              height: 164,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .74
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-124-136',
              width: 124,
              height: 136,
              lineWidth: 8,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-132',
              width: 120,
              height: 132,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-100-110',
              width: 100,
              height: 110,
              lineWidth: 6,
              roundedCorners: true,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-82-90',
              width: 82,
              height: 90,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-110',
              width: 100,
              height: 110,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-84-92',
              width: 84,
              height: 92,
              lineWidth: 5,
              roundedCorners: true,
              roundedCornerRadius: 3,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-68-74',
              width: 68,
              height: 74,
              roundedCorners: true,
              roundedCornerRadius: 3,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-50-56',
              width: 50,
              height: 56,
              roundedCorners: true,
              roundedCornerRadius: 2,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-progress-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              gradient: {
                colors: ['#41efff', '#615dfa']
              },
              scale: {
                start: 0,
                end: 1,
                stop: .8
              }
            });

            app.plugins.createHexagon({
              container: '.hexagon-border-40-44',
              width: 40,
              height: 44,
              lineWidth: 3,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#e7e8ee'
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-32-34',
              width: 32,
              height: 34,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-32-36',
              width: 32,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-26-28',
              width: 26,
              height: 28,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-28-32',
              width: 28,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-22-24',
              width: 22,
              height: 24,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#fff',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-dark-16-18',
              width: 16,
              height: 18,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: '#45437f',
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-120-130',
              width: 120,
              height: 130,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-100-108',
              width: 100,
              height: 108,
              roundedCorners: true,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-124-136',
              width: 124,
              height: 136,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-84-92',
              width: 84,
              height: 92,
              roundedCorners: true,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-34-36',
              width: 34,
              height: 36,
              roundedCorners: true,
              roundedCornerRadius: 1,
              fill: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-40-44',
              width: 40,
              height: 44,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-24-26',
              width: 24,
              height: 26,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-image-18-20',
              width: 18,
              height: 20,
              roundedCorners: true,
              roundedCornerRadius: 1,
              clip: true
            });

            app.plugins.createHexagon({
              container: '.hexagon-overlay-30-32',
              width: 30,
              height: 32,
              roundedCorners: true,
              roundedCornerRadius: 1,
              lineColor: 'rgba(97, 93, 250, .9)',
              fill: true
            });
        }

        var links = document.getElementsByClassName('reacting-picture');

        // For each <li> inside #links
        for (var i = 0; i < links.length; i++) {
            var link = links[i];
            link.addEventListener('click', (e) => {
                let reactIcon = e.target.parentNode;

                const dataPostId = postId;
                const dataReact = reactIcon.getAttribute('data-react');
                const data = {
                    postId: dataPostId,
                    userId: "{{ app.user.id }}",
                    react: dataReact
                };

                let datas = new FormData();
                datas.append("data", JSON.stringify(data));

                fetch("{{ path('front_react_post_add') }}", { method: 'POST', body: datas })
                    .then(response => response.json())
                    .then(data => {

                        const postId = document.getElementById(`like-picture`);
                        postId.style.fill = '#23d2e2';

                        const reactId = document.getElementById(`list_react_post`);
                        reactId.innerHTML = data.react.content;

                        app.plugins.createDropdown({
                            trigger: '.reaction-item-dropdown-trigger',
                            container: '.reaction-item-dropdown',
                            triggerEvent: 'hover',
                            offset: {
                                bottom: 38,
                                left: -16
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 20
                                }
                            }
                        });

                        app.plugins.createDropdown({
                            trigger: '.reaction-options-dropdown-trigger',
                            container: '.reaction-options-dropdown',
                            triggerEvent: 'click',
                            offset: {
                                bottom: 54,
                                left: -16
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 20
                                }
                            },
                            closeOnDropdownClick: true
                        });

                        app.plugins.createDropdown({
                            trigger: '.reaction-options-small-dropdown-trigger',
                            container: '.reaction-options-small-dropdown',
                            triggerEvent: 'click',
                            offset: {
                                bottom: 30,
                                left: -80
                            },
                            animation: {
                                type: 'translate-bottom',
                                speed: .3,
                                translateOffset: {
                                    vertical: 16
                                }
                            },
                            closeOnDropdownClick: true
                        });
                    });
            });
        }

        const commentForm = document.getElementById('form_comment_response');
            commentForm.addEventListener('submit', function(e) {
              e.preventDefault();
              e.stopImmediatePropagation();

              let form = e.target;
              const formData = new FormData(form);

              formData.append('postId', postId);

              fetch("{{ path('front_fil_add_comment') }}", { method: "POST", body: formData })
                .then(response => response.json())
                .then(data => {

                    if (data.message === 'ok') {
                        document.getElementById('comment_list_post').insertAdjacentHTML('afterbegin', data.comment.content);
                        document.getElementById('popup-post-reply').value = '';

                        app.plugins.createHexagon({
                          container: '.hexagon-148-164',
                          width: 148,
                          height: 164,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-124-136',
                          width: 124,
                          height: 136,
                          lineWidth: 8,
                          roundedCorners: true,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .74
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-124-136',
                          width: 124,
                          height: 136,
                          lineWidth: 8,
                          roundedCorners: true,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-100-110',
                          width: 100,
                          height: 110,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-120-132',
                          width: 120,
                          height: 132,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-100-110',
                          width: 100,
                          height: 110,
                          lineWidth: 6,
                          roundedCorners: true,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-100-110',
                          width: 100,
                          height: 110,
                          lineWidth: 6,
                          roundedCorners: true,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-82-90',
                          width: 82,
                          height: 90,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-100-110',
                          width: 100,
                          height: 110,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-84-92',
                          width: 84,
                          height: 92,
                          lineWidth: 5,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-84-92',
                          width: 84,
                          height: 92,
                          lineWidth: 5,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-68-74',
                          width: 68,
                          height: 74,
                          roundedCorners: true,
                          roundedCornerRadius: 3,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-50-56',
                          width: 50,
                          height: 56,
                          roundedCorners: true,
                          roundedCornerRadius: 2,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-progress-40-44',
                          width: 40,
                          height: 44,
                          lineWidth: 3,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          gradient: {
                            colors: ['#41efff', '#615dfa']
                          },
                          scale: {
                            start: 0,
                            end: 1,
                            stop: .8
                          }
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-border-40-44',
                          width: 40,
                          height: 44,
                          lineWidth: 3,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#e7e8ee'
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-30-32',
                          width: 30,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-40-44',
                          width: 40,
                          height: 44,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-32-34',
                          width: 32,
                          height: 34,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-32-36',
                          width: 32,
                          height: 36,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-26-28',
                          width: 26,
                          height: 28,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-28-32',
                          width: 28,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-22-24',
                          width: 22,
                          height: 24,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-22-24',
                          width: 22,
                          height: 24,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#fff',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-dark-16-18',
                          width: 16,
                          height: 18,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: '#45437f',
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-120-130',
                          width: 120,
                          height: 130,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-100-108',
                          width: 100,
                          height: 108,
                          roundedCorners: true,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-124-136',
                          width: 124,
                          height: 136,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-84-92',
                          width: 84,
                          height: 92,
                          roundedCorners: true,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-34-36',
                          width: 34,
                          height: 36,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          fill: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-40-44',
                          width: 40,
                          height: 44,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-24-26',
                          width: 24,
                          height: 26,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-image-18-20',
                          width: 18,
                          height: 20,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          clip: true
                        });

                        app.plugins.createHexagon({
                          container: '.hexagon-overlay-30-32',
                          width: 30,
                          height: 32,
                          roundedCorners: true,
                          roundedCornerRadius: 1,
                          lineColor: 'rgba(97, 93, 250, .9)',
                          fill: true
                        });
                                }
                            });
                          return false;
                        })
    });
    }
    loadPicture();
  })
})
</script>
{% endblock %}
