<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- bootstrap 4.3.1 -->
    <link rel="stylesheet" href="{{ asset('css/vendor/bootstrap.min.css') }}">
    <!-- styles -->
    <link rel="stylesheet" href="{{ asset('css/styles.min.css') }}">
    <!-- simplebar styles -->
    <link rel="stylesheet" href="{{ asset('css/vendor/simplebar.css') }}">
    <!-- tiny-slider styles -->
    <link rel="stylesheet" href="{{ asset('css/vendor/tiny-slider.css') }}">
    <!-- favicon -->
    <link rel="icon" href="{{ asset('img/favicon.ico') }}">
    {% block style %}{% endblock %}
    <title>Profil</title>
</head>
<body>

<!-- PAGE LOADER -->
{{ include('front/inc/loader.html.twig') }}

<!-- NAVIGATION LEFT -->
{# {{ include('front/inc/navbar_left.html.twig') }} #}
{# TODO #}
<!-- CHAT WIDGET -->
{# {{ include('front/inc/chat_right.html.twig') }} #}

<!-- HEADER -->
{{ include('front/inc/header.html.twig') }}

{{ include('front/inc/popup_picture.html.twig') }}

{% block start_body %}{% endblock %}

<!-- CONTENT GRID -->
<div class="{% if app.request.attributes.get('_route') != 'front_profil_blog_single' %}content-grid{% endif %}">
    {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}
    {% for message in app.flashes('danger') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}
    {% block body %}{% endblock %}
{% if app.request.attributes.get('_route') != 'front_space_groups' %}</div>{% endif %}

<!-- POPUP PICTURE -->

<!-- /POPUP PICTURE -->

<!-- app -->
<script src="{{ asset('js/utils/app.js') }}"></script>
<!-- page loader -->
<script src="{{ asset('js/utils/page-loader.js') }}"></script>
<!-- simplebar -->
<script src="{{ asset('js/vendor/simplebar.min.js') }}"></script>
<!-- liquidify -->
<script src="{{ asset('js/utils/liquidify.js') }}"></script>
<!-- XM_Plugins -->
<script src="{{ asset('js/vendor/xm_plugins.min.js') }}"></script>
<!-- tiny-slider -->
<script src="{{ asset('js/vendor/tiny-slider.min.js') }}"></script>
<!-- global.hexagons -->
<script src="{{ asset('js/global/global.hexagons.js') }}"></script>
<!-- global.tooltips -->
<script src="{{ asset('js/global/global.tooltips.js') }}"></script>
<script src="{{ asset('js/global/global.popups.js') }}"></script>
<!-- global.popups -->
<script src="{{ asset('js/global/global.accordions.js') }}"></script>
<!-- header -->
<script src="{{ asset('js/header/header.js') }}"></script>
<!-- sidebar -->
<script src="{{ asset('js/sidebar/sidebar.js') }}"></script>
<!-- content -->
<script src="{{ asset('js/content/content.js') }}"></script>
<!-- form.utils -->
<script src="{{ asset('js/form/form.utils.js') }}"></script>
<!-- twitter widget -->
<script src="{{ asset('js/widget/twitter.js') }}"></script>
<!-- SVG icons -->
<script src="{{ asset('js/utils/svg-loader.js') }}"></script>
{% block javascript %}{% endblock %}
<script>
    var links = document.getElementsByClassName('reacting');

    // For each <li> inside #links
    for (var i = 0; i < links.length; i++) {
        var link = links[i];
        link.addEventListener('click', (e) => {
            let reactIcon = e.target.parentNode;

            const dataPostId = reactIcon.getAttribute('data-post');
            const dataReact = reactIcon.getAttribute('data-react');
            const data = {
                postId: dataPostId,
                userId: "{{ app.user.id }}",
                react: dataReact
            };

            let datas = new FormData();
            datas.append("data", JSON.stringify(data));

            fetch("{{ path('front_react_post_add') }}", { method: 'POST', body: datas })
                .then(response => response.json())
                .then(data => {
                    const postId = document.getElementById(`like-${dataPostId}`);
                    postId.style.color = '#23d2e2';

                    const reactId = document.getElementById(`react-${dataPostId}`);

                    reactId.innerHTML = data.react.content;

                    app.plugins.createDropdown({
                        trigger: '.reaction-item-dropdown-trigger',
                        container: '.reaction-item-dropdown',
                        triggerEvent: 'hover',
                        offset: {
                            bottom: 38,
                            left: -16
                        },
                        animation: {
                            type: 'translate-bottom',
                            speed: .3,
                            translateOffset: {
                                vertical: 20
                            }
                        }
                    });

                    app.plugins.createDropdown({
                        trigger: '.reaction-options-dropdown-trigger',
                        container: '.reaction-options-dropdown',
                        triggerEvent: 'click',
                        offset: {
                            bottom: 54,
                            left: -16
                        },
                        animation: {
                            type: 'translate-bottom',
                            speed: .3,
                            translateOffset: {
                                vertical: 20
                            }
                        },
                        closeOnDropdownClick: true
                    });

                    app.plugins.createDropdown({
                        trigger: '.reaction-options-small-dropdown-trigger',
                        container: '.reaction-options-small-dropdown',
                        triggerEvent: 'click',
                        offset: {
                            bottom: 30,
                            left: -80
                        },
                        animation: {
                            type: 'translate-bottom',
                            speed: .3,
                            translateOffset: {
                                vertical: 16
                            }
                        },
                        closeOnDropdownClick: true
                    });
                });
        });
    }

    document.getElementById("search-main").addEventListener("keyup",function () {

        let datas = new FormData();
        const data = {
            'search': document.getElementById("search-main").value
        };

        datas.append("data", JSON.stringify(data));

        fetch("{{ path('front_search_bar') }}", {method: 'POST', body: datas})
            .then(response => response.json())
            .then(data => {

                document.getElementById('search_autocomplete_members').innerHTML = data.users.content;
                document.getElementById('search_autocomplete_groups').innerHTML = data.groups.content;

                /*---------------------------
    USER AVATAR HEXAGONS
---------------------------*/
                app.plugins.createHexagon({
                    container: '.hexagon-148-164',
                    width: 148,
                    height: 164,
                    roundedCorners: true,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-progress-124-136',
                    width: 124,
                    height: 136,
                    lineWidth: 8,
                    roundedCorners: true,
                    gradient: {
                        colors: ['#41efff', '#615dfa']
                    },
                    scale: {
                        start: 0,
                        end: 1,
                        stop: .74
                    }
                });

                app.plugins.createHexagon({
                    container: '.hexagon-border-124-136',
                    width: 124,
                    height: 136,
                    lineWidth: 8,
                    roundedCorners: true,
                    lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-100-110',
                    width: 100,
                    height: 110,
                    roundedCorners: true,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-120-132',
                    width: 120,
                    height: 132,
                    roundedCorners: true,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-progress-100-110',
                    width: 100,
                    height: 110,
                    lineWidth: 6,
                    roundedCorners: true,
                    gradient: {
                        colors: ['#41efff', '#615dfa']
                    },
                    scale: {
                        start: 0,
                        end: 1,
                        stop: .8
                    }
                });

                app.plugins.createHexagon({
                    container: '.hexagon-border-100-110',
                    width: 100,
                    height: 110,
                    lineWidth: 6,
                    roundedCorners: true,
                    lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-82-90',
                    width: 82,
                    height: 90,
                    roundedCorners: true,
                    roundedCornerRadius: 3,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-100-110',
                    width: 100,
                    height: 110,
                    roundedCorners: true,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-progress-84-92',
                    width: 84,
                    height: 92,
                    lineWidth: 5,
                    roundedCorners: true,
                    roundedCornerRadius: 3,
                    gradient: {
                        colors: ['#41efff', '#615dfa']
                    },
                    scale: {
                        start: 0,
                        end: 1,
                        stop: .8
                    }
                });

                app.plugins.createHexagon({
                    container: '.hexagon-border-84-92',
                    width: 84,
                    height: 92,
                    lineWidth: 5,
                    roundedCorners: true,
                    roundedCornerRadius: 3,
                    lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-68-74',
                    width: 68,
                    height: 74,
                    roundedCorners: true,
                    roundedCornerRadius: 3,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-50-56',
                    width: 50,
                    height: 56,
                    roundedCorners: true,
                    roundedCornerRadius: 2,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-progress-40-44',
                    width: 40,
                    height: 44,
                    lineWidth: 3,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    gradient: {
                        colors: ['#41efff', '#615dfa']
                    },
                    scale: {
                        start: 0,
                        end: 1,
                        stop: .8
                    }
                });

                app.plugins.createHexagon({
                    container: '.hexagon-border-40-44',
                    width: 40,
                    height: 44,
                    lineWidth: 3,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#e7e8ee'
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-30-32',
                    width: 30,
                    height: 32,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-40-44',
                    width: 40,
                    height: 44,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-dark-32-34',
                    width: 32,
                    height: 34,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#45437f',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-32-36',
                    width: 32,
                    height: 36,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#fff',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-dark-26-28',
                    width: 26,
                    height: 28,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#45437f',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-28-32',
                    width: 28,
                    height: 32,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#fff',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-dark-22-24',
                    width: 22,
                    height: 24,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#45437f',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-22-24',
                    width: 22,
                    height: 24,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#fff',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-dark-16-18',
                    width: 16,
                    height: 18,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: '#45437f',
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-120-130',
                    width: 120,
                    height: 130,
                    roundedCorners: true,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-100-108',
                    width: 100,
                    height: 108,
                    roundedCorners: true,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-124-136',
                    width: 124,
                    height: 136,
                    roundedCorners: true,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-84-92',
                    width: 84,
                    height: 92,
                    roundedCorners: true,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-34-36',
                    width: 34,
                    height: 36,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    fill: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-40-44',
                    width: 40,
                    height: 44,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-24-26',
                    width: 24,
                    height: 26,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-image-18-20',
                    width: 18,
                    height: 20,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    clip: true
                });

                app.plugins.createHexagon({
                    container: '.hexagon-overlay-30-32',
                    width: 30,
                    height: 32,
                    roundedCorners: true,
                    roundedCornerRadius: 1,
                    lineColor: 'rgba(97, 93, 250, .9)',
                    fill: true
                });
            })
    })
</script>
</body>
</html>
